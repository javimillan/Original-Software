
$ node server/index.js (para iniciar mongodb)

arrancar servicios (c/programs/mongo/.../bin)
->mongod.exe

consola mongo
->mongo.exe
-----

show dbs

use gam

db.createUser({
  user: '001',
  pwd: '0011',
  roles: ['readWrite', 'dbAdmin']
});

db.createCollection('empresas')

show collections

for (var i = 1; i <= 5000; i++) {
   db.pacientes.insert(   {
       "url": "https://api.github.com/repos/angular/angular/issues/24918",
       "repository_url": "https://api.github.com/repos/angular/angular",
       "labels_url": "https://api.github.com/repos/angular/angular/issues/24918/labels{/name}",
       "comments_url": "https://api.github.com/repos/angular/angular/issues/24918/comments",
       "events_url": "https://api.github.com/repos/angular/angular/issues/24918/events",
       "html_url": "https://github.com/angular/angular/issues/24918",
       "id": 341826810,
       "node_id": "MDU6SXNzdWUzNDE4MjY4MTA=",
       "number": 24918,
       "title": "not providing service is a silent error",
       "user": {
         "login": "inspirassion",
         "id": 38664774,
         "node_id": "MDQ6VXNlcjM4NjY0Nzc0",
         "avatar_url": "https://avatars0.githubusercontent.com/u/38664774?v=4",
         "gravatar_id": "",
         "url": "https://api.github.com/users/inspirassion",
         "html_url": "https://github.com/inspirassion",
         "followers_url": "https://api.github.com/users/inspirassion/followers",
         "following_url": "https://api.github.com/users/inspirassion/following{/other_user}",
         "gists_url": "https://api.github.com/users/inspirassion/gists{/gist_id}",
         "starred_url": "https://api.github.com/users/inspirassion/starred{/owner}{/repo}",
         "subscriptions_url": "https://api.github.com/users/inspirassion/subscriptions",
         "organizations_url": "https://api.github.com/users/inspirassion/orgs",
         "repos_url": "https://api.github.com/users/inspirassion/repos",
         "events_url": "https://api.github.com/users/inspirassion/events{/privacy}",
         "received_events_url": "https://api.github.com/users/inspirassion/received_events",
         "type": "User",
         "site_admin": false
       },
       "labels": [
   
       ],
       "state": "open",
       "locked": false,
       "assignee": null,
       "assignees": [
   
       ],
       "milestone": null,
       "comments": 0,
       "created_at": "2018-07-17T08:58:27Z",
       "updated_at": "2018-07-17T08:58:27Z",
       "closed_at": null,
       "author_association": "NONE",
       "body": "It s better to raise exception when service is used and not provided, I spent hours trying to figure out strange system behaiviour to realise that it's because I use service that is not provided"
     } )
}



[
  {
    "url": "https://api.github.com/repos/angular/angular/issues/24918",
    "repository_url": "https://api.github.com/repos/angular/angular",
    "labels_url": "https://api.github.com/repos/angular/angular/issues/24918/labels{/name}",
    "comments_url": "https://api.github.com/repos/angular/angular/issues/24918/comments",
    "events_url": "https://api.github.com/repos/angular/angular/issues/24918/events",
    "html_url": "https://github.com/angular/angular/issues/24918",
    "id": 341826810,
    "node_id": "MDU6SXNzdWUzNDE4MjY4MTA=",
    "number": 24918,
    "title": "not providing service is a silent error",
    "user": {
      "login": "inspirassion",
      "id": 38664774,
      "node_id": "MDQ6VXNlcjM4NjY0Nzc0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/38664774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/inspirassion",
      "html_url": "https://github.com/inspirassion",
      "followers_url": "https://api.github.com/users/inspirassion/followers",
      "following_url": "https://api.github.com/users/inspirassion/following{/other_user}",
      "gists_url": "https://api.github.com/users/inspirassion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/inspirassion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/inspirassion/subscriptions",
      "organizations_url": "https://api.github.com/users/inspirassion/orgs",
      "repos_url": "https://api.github.com/users/inspirassion/repos",
      "events_url": "https://api.github.com/users/inspirassion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/inspirassion/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-07-17T08:58:27Z",
    "updated_at": "2018-07-17T08:58:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "It s better to raise exception when service is used and not provided, I spent hours trying to figure out strange system behaiviour to realise that it's because I use service that is not provided"
  }

]

db.empresas.insert([
  {
    nombre: 'AMBULANCIAS BENITO, SL',
    direccion: 'Asimov',
    codPostal: '08201',
    poblacion:'Sabadell',
    provincia:'Barcelona'
  },
  {
    nombre: 'EMPRESA GRANADA',
    direccion: 'calle inventada',
    codPostal: '46117',
    poblacion:'Betera',
    provincia:'Valencia'
  }
  ])

db.empresas.find().pretty()

db.empresas.find();
db.empresas.find({nombre: 'EMPRESA GRANADA'}).pretty();

// replace or update data
db.empresas.update(
  {firstName: 'Joe'}, //query
  {
    firstName: 'Joe',
    lastName: 'MacMillan',
    gender: 'male'
  } // new data
);

// add a new date
db.empresas.update(
  {firstName: 'Isaac'},
  {
    $set: {gender: 'male'}
  }
);
//añadir campo
db.empresas.update(
  {firstName: 'Isaac'},
  {
    $set: {age: 45}
  }
);
//eliminar campo (el 1 es como un true)
db.empresas.update(
  {firstName: 'Isaac'},
  {
    $unset:  {age: 1}
  }
)
//aumentar campo numerico en +5
db.empresas.update(
  {firstName: 'Isaac'},
  {
    $inc: {age: 5}
  }
);

//actualizar y si no existe creamos
db.empresas.update(
  {firstName: 'Elena'} ,
  {
    firstName: 'Elena',
    lastName: 'Soraya'
  },
  { upsert: true}
)
//cambiar nombre campo
db.empresas.update(
  {firstName: 'Isaac'},
  {
    $rename: {"gender": "sex"}
  }
)

db.empresas.remove({firstName: "Isaac"})
db.empresas.remove({firstName: "Isaac"}, {justOne: true})

db.empresas.find({firstName: "Elena"});
db.empresas.find({$or: [{firstName: "Elena"}, {firstName: "Isaac"}]})
db.empresas.fid({gender: "male"})

db.empresas.find({age: {$lt: 40}})
db.empresas.find({age: {$gt: 40}})
db.empresas.find({age: {$gt: 30, $lt: 90}});

db.empresas.find({"address.city": "Boston"})

db.empresas.find({name: {$regex: 'ston'}});

// sorting
db.empresas.find().sort({lastName: 1});
db.empresas.find().sort({lastName: -1});
db.empresas.find().count()
db.empresas.find({gender: "male"}).count()
db.empresas.find().limit(4)
db.empresas.find().limit(4).sort({lastName: -1})

db.empresas.find().forEach(function(doc) {
  print("Customer Name" + doc.firstName);
});
